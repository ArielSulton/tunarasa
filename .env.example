# ========================================
# TUNARASA ENVIRONMENT CONFIGURATION
# Complete environment setup for development and production
# ========================================

# ========================================
# ENVIRONMENT CONFIGURATION
# ========================================
# Application environment: development, production, test
NODE_ENV=development
ENVIRONMENT=development
# Enable debug logging (true/false)
DEBUG=true
# Application site name
SITE_NAME=tunarasa

# ========================================
# FRONTEND CONFIGURATION (Next.js)
# ========================================
# Public URL where frontend is accessible
NEXT_PUBLIC_APP_URL=http://localhost:3000
# Backend API URL for client-side requests
NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
# Alternative API URL for admin client
NEXT_PUBLIC_API_URL=http://localhost:8000
# Internal backend URL for server-side requests
BACKEND_URL=http://backend:8000
# Disable Next.js telemetry (1 to disable)
NEXT_TELEMETRY_DISABLED=1
# Enable standalone mode for Docker (true/false)
NEXT_PRIVATE_STANDALONE=true

# ========================================
# DATABASE CONFIGURATION
# ========================================
# Primary PostgreSQL database connection URL
# Format: postgresql://user:password@host:port/database
DATABASE_URL=

# Alternative: Supabase Configuration
SUPABASE_URL=
SUPABASE_ANON_KEY=
SUPABASE_SERVICE_ROLE_KEY=

# Database Connection Pool Settings
# Number of connections in pool (default: 10)
DB_POOL_SIZE=10
# Maximum overflow connections (default: 20)
DB_MAX_OVERFLOW=20
# Connection timeout in seconds (default: 30)
DB_POOL_TIMEOUT=30

# ========================================
# AUTHENTICATION & SECURITY
# ========================================
# Backend JWT secret key (minimum 32 characters)
SECRET_KEY=
# JWT token expiration in minutes (default: 30)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Clerk Authentication for Admin Dashboard
CLERK_SECRET_KEY=
CLERK_PUBLISHABLE_KEY=

# ========================================
# AI SERVICES CONFIGURATION
# ========================================
# Groq LLM Service API key
GROQ_API_KEY=
# LLM model name (default: llama3-8b-8192)
LLM_MODEL=llama3-8b-8192
# LLM temperature for randomness 0.0-2.0 (default: 0.7)
LLM_TEMPERATURE=0.7
# Maximum tokens for LLM responses (default: 1024)
LLM_MAX_TOKENS=1024

# OpenAI API key for document embeddings
OPENAI_API_KEY=

# Pinecone Vector Database Configuration
PINECONE_API_KEY=
# Pinecone environment (e.g., us-west1-gcp)
PINECONE_ENVIRONMENT=
# Pinecone index name for document storage
PINECONE_INDEX_NAME=

# ========================================
# RAG SYSTEM CONFIGURATION
# ========================================
# Document chunk size for embeddings (default: 1000)
RAG_CHUNK_SIZE=1000
# Chunk overlap size (default: 200)
RAG_CHUNK_OVERLAP=200
# Number of documents to retrieve (default: 3)
RAG_RETRIEVAL_K=3
# Similarity threshold for retrieval 0.0-1.0 (default: 0.7)
RAG_SIMILARITY_THRESHOLD=0.7

# ========================================
# EXTERNAL SERVICES
# ========================================
# Email Service Configuration
# For Development: MailHog SMTP (set EMAIL_BACKEND=mailhog)
EMAIL_BACKEND=mailhog
SMTP_HOST=mailhog
SMTP_PORT=1025
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_USE_TLS=false
SMTP_USE_SSL=false

# For Production: Resend API (set EMAIL_BACKEND=resend)
# EMAIL_BACKEND=resend
RESEND_API_KEY=

# Email Settings
FROM_EMAIL=noreply@yourdomain.com
FROM_NAME=Your App Name
ADMIN_EMAIL=admin@yourdomain.com

# Redis cache connection URL
REDIS_URL=

# ========================================
# API & SECURITY CONFIGURATION
# ========================================
# Allowed CORS origins (comma-separated)
CORS_ORIGINS=
# Allowed hosts for production (comma-separated)
ALLOWED_HOSTS=

# Rate Limiting Configuration
# Requests per window (default: 100)
RATE_LIMIT_REQUESTS=100
# Rate limit window in seconds (default: 60)
RATE_LIMIT_WINDOW=60

# File Upload Configuration
# Maximum file size in bytes (default: 10MB = 10485760)
MAX_FILE_SIZE=10485760
# Upload directory path (default: /tmp/uploads)
UPLOAD_DIR=/tmp/uploads

# API Configuration
# API version prefix (default: /api/v1)
API_V1_STR=/api/v1
# Project name for API documentation
PROJECT_NAME=Tunarasa

# ========================================
# MONITORING & OBSERVABILITY
# ========================================
# Prometheus metrics port (default: 9090)
PROMETHEUS_PORT=9090

# Grafana Configuration
GRAFANA_ADMIN_USER=
GRAFANA_ADMIN_PASSWORD=
# Grafana dashboard URL
GRAFANA_URL=
# Custom domain for Grafana (production)
GRAFANA_DOMAIN=
# Custom domain for Alertmanager (production)
ALERTMANAGER_DOMAIN=

# ========================================
# DEVELOPMENT NOTES
# ========================================
# Required for Core Functionality:
# - DATABASE_URL or SUPABASE_URL
# - SECRET_KEY (32+ characters)
# - GROQ_API_KEY
# - REDIS_URL
#
# Required for AI Features:
# - PINECONE_API_KEY
# - OPENAI_API_KEY
#
# Required for Admin Dashboard:
# - CLERK_SECRET_KEY
# - CLERK_PUBLISHABLE_KEY
#
# Optional but Recommended:
# - RESEND_API_KEY (email notifications)
# - GRAFANA configuration (monitoring)
#
# Production Security:
# - Set ENVIRONMENT=production
# - Set DEBUG=false
# - Configure CORS_ORIGINS and ALLOWED_HOSTS
# - Use strong SECRET_KEY
# ========================================